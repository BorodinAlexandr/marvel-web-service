{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","transformCharacter","getCharacter","id","getAllComics","transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","Skeleton","comic","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/5.b7884947.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=53d38175c749705ccf900c3bc79006e2';\r\n  const _baseOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available',\r\n    };\r\n  };\r\n\r\n  return { loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: 'cover' };\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = { objectFit: 'contain' };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 9);\n    setCharEnded(ended);\n  };\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: 'cover' };\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { objectFit: 'unset' };\n      }\n\n      return (\n        <CSSTransition key={item.id} timeout={500} classNames=\"char__item\">\n          <li\n            className=\"char__item\"\n            tabIndex={0}\n            ref={(el) => (itemRefs.current[i] = el)}\n            onClick={() => {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }}\n            onKeyPress={(e) => {\n              if (e.key === ' ' || e.key === 'Enter') {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }\n            }}\n          >\n            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n            <div className=\"char__name\">{item.name}</div>\n          </li>\n        </CSSTransition>\n      );\n    });\n\n    return (\n      <ul className=\"char__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? 'none' : 'block' }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, [props.charId]);\n\n  const updateChar = () => {\n    clearError();\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let imgStyle = { objectFit: 'cover' };\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = { objectFit: 'contain' };\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {comics.map((comic, i) => {\n          // eslint-disable-next-line\n          if (i < 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {comic.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}