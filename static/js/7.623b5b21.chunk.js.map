{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/setContentWithLoading.js"],"names":["ComicsList","useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","process","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","setContentWithLoading","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Component","Error"],"mappings":"uOAqEeA,EA7DI,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAA8CC,cAAtCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,WAE/BC,qBAAU,WACRC,EAAUT,GAAQ,KACjB,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACfX,GAAVW,GACAL,EAAaL,GACVW,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAGrBK,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVjB,EAAc,GAAD,mBAAKD,GAAL,YAAoBiB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,IAmBjB,OACE,sBAAKE,UAAU,eAAf,UACGC,YAAsBX,GAAS,kBAlBpC,SAAqBY,GACnB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GAC3B,OACE,oBAAIN,UAAU,eAAd,SACE,eAAC,IAAD,CAAMO,GAAE,kBAAaF,EAAKG,IAA1B,UACE,qBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,MAAOZ,UAAU,qBACrD,qBAAKA,UAAU,oBAAf,SAAoCK,EAAKO,QACzC,qBAAKZ,UAAU,qBAAf,SAAqCK,EAAKQ,YAJZP,MAUtC,OAAO,oBAAIN,UAAU,eAAd,SAA8BG,IAKGW,CAAYlC,KAAaE,GAC/D,wBACEiC,SAAUjC,EACVkC,MAAO,CAAEC,QAAS/B,EAAc,OAAS,SACzCc,UAAU,mCACVkB,QAAS,kBAAMzB,EAAUT,IAJ3B,SAME,qBAAKgB,UAAU,QAAf,6B,SC9COmB,UAbI,WACjB,OACE,qCACE,eAACC,EAAA,EAAD,WACE,sBAAMC,KAAK,+BAA+BC,QAAQ,8BAClD,mDAEF,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,S,0FCRS,SAASC,EAAmBtB,GACzC,OCJa,SAA4BA,GACzC,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO,OAAAyB,EAAA,GAAiBzB,GDGzC,CAAkBA,IELZ,SAA0B0B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB1B,IAAQ,OAAA+B,EAAA,GAA2B/B,IGLvE,WACb,MAAM,IAAIgC,UAAU,wIHIwE,K,gCIL9F,2BAkBejC,IAfe,SAACX,EAAS6C,EAAWrD,GACjD,OAAQQ,GACN,IAAK,UACH,OAAO,cAAC,IAAD,IACT,IAAK,UACH,OAAOR,EAAiB,cAACqD,EAAD,IAAgB,cAAC,IAAD,IAC1C,IAAK,YACH,OAAO,cAACA,EAAD,IACT,IAAK,QACH,OAAO,cAAC,IAAD,IACT,QACE,MAAM,IAAIC,MAAM","file":"static/js/7.623b5b21.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport setContentWithLoading from '../../utils/setContentWithLoading';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess('confirmed'));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContentWithLoading(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"Page with list of our comics\" content=\"Marvel information portal\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\n\r\nconst setContentWithLoading = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Spinner />;\r\n    case 'loading':\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n    case 'confirmed':\r\n      return <Component />;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n};\r\n\r\nexport default setContentWithLoading;\r\n"],"sourceRoot":""}